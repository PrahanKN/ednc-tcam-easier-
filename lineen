module tcam_line_encoder #(
    parameter ADDR_WIDTH = 8
)(
    input wire clk,
    input wire rst,
    input wire [2**ADDR_WIDTH-1:0] line_match,
    input wire line_valid,
    output wire [ADDR_WIDTH-1:0] addr,
    output wire addr_valid,
    output wire addr_null
);

reg encode;
reg [2**ADDR_WIDTH-1:0] line;
reg [ADDR_WIDTH-1:0] addr_out=2;
reg valid_out;
reg null_out;
integer i;

assign addr = addr_out;
assign addr_valid = valid_out;
assign addr_null = null_out;

always @(posedge clk or posedge rst) begin
    if (rst) begin
        encode <= 1'b0;
    end else begin
        if (encode == 1'b0) begin
            if (line_valid) begin
                line <= line_match;
                encode <= 1'b1;
            end
        end else begin
            if (line == 0) begin
                encode <= 1'b0;
            end else begin
                // Processing each bit without using "break"
                valid_out = 1'b0;  // Default invalid until a match is found
                null_out = 1'b0;   // Default to valid address until proven otherwise
                for (i = 0; i < 2**ADDR_WIDTH; i = i + 1) begin
                    if (line[i] == 1'b1) begin
                        line[i] <= 1'b0;    // Set the matched bit to 0
                        addr_out = i;        // Store the matched address
                        valid_out = 1'b1;    // Set valid to true
                        null_out = 1'b0;     // Address is valid
                    end
                end
                // If no matches found, mark as null
                if (!valid_out) begin
                    null_out = 1'b1;
                    
                end
            end
        end
    end
end
//initial begin
//$monitor ("At time %t addr= %d\n",$time,addr_out);
//end

endmodule
